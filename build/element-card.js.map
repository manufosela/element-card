{"version":3,"file":"element-card.js","sources":["../node_modules/lit-element/node_modules/lit-html/lib/directive.js","../node_modules/lit-element/node_modules/lit-html/lib/dom.js","../node_modules/lit-element/node_modules/lit-html/lib/part.js","../node_modules/lit-element/node_modules/lit-html/lib/template.js","../node_modules/lit-element/node_modules/lit-html/lib/template-instance.js","../node_modules/lit-element/node_modules/lit-html/lib/template-result.js","../node_modules/lit-element/node_modules/lit-html/lib/parts.js","../node_modules/lit-element/node_modules/lit-html/lib/default-template-processor.js","../node_modules/lit-element/node_modules/lit-html/lib/template-factory.js","../node_modules/lit-element/node_modules/lit-html/lib/render.js","../node_modules/lit-element/node_modules/lit-html/lit-html.js","../node_modules/lit-element/node_modules/lit-html/lib/modify-template.js","../node_modules/lit-element/node_modules/lit-html/lib/shady-render.js","../node_modules/lit-element/lib/updating-element.js","../node_modules/lit-element/lib/decorators.js","../node_modules/lit-element/lib/css-tag.js","../node_modules/lit-element/lit-element.js","../node_modules/@manufosela/circle-percent/circle-percent.js","../node_modules/@manufosela/nav-list/nav-list.js","../element-card.js"],"sourcesContent":["/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst directives = new WeakMap();\n/**\n * Brands a function as a directive so that lit-html will call the function\n * during template rendering, rather than passing as a value.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object\n *\n * @example\n *\n * ```\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n * ```\n */\n// tslint:disable-next-line:no-any\nexport const directive = (f) => ((...args) => {\n    const d = f(...args);\n    directives.set(d, true);\n    return d;\n});\nexport const isDirective = (o) => {\n    return typeof o === 'function' && directives.has(o);\n};\n//# sourceMappingURL=directive.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = window.customElements !== undefined &&\n    window.customElements.polyfillWrapFlushCallback !==\n        undefined;\n/**\n * Reparents nodes, starting from `startNode` (inclusive) to `endNode`\n * (exclusive), into another container (could be the same container), before\n * `beforeNode`. If `beforeNode` is null, it appends the nodes to the\n * container.\n */\nexport const reparentNodes = (container, start, end = null, before = null) => {\n    let node = start;\n    while (node !== end) {\n        const n = node.nextSibling;\n        container.insertBefore(node, before);\n        node = n;\n    }\n};\n/**\n * Removes nodes, starting from `startNode` (inclusive) to `endNode`\n * (exclusive), from `container`.\n */\nexport const removeNodes = (container, startNode, endNode = null) => {\n    let node = startNode;\n    while (node !== endNode) {\n        const n = node.nextSibling;\n        container.removeChild(node);\n        node = n;\n    }\n};\n//# sourceMappingURL=dom.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n//# sourceMappingURL=part.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n/**\n * An updateable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n    constructor(result, element) {\n        this.parts = [];\n        this.element = element;\n        let index = -1;\n        let partIndex = 0;\n        const nodesToRemove = [];\n        const _prepareTemplate = (template) => {\n            const content = template.content;\n            // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be\n            // null\n            const walker = document.createTreeWalker(content, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n            // Keeps track of the last index associated with a part. We try to delete\n            // unnecessary nodes, but we never want to associate two different parts\n            // to the same index. They must have a constant node between.\n            let lastPartIndex = 0;\n            while (walker.nextNode()) {\n                index++;\n                const node = walker.currentNode;\n                if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n                    if (node.hasAttributes()) {\n                        const attributes = node.attributes;\n                        // Per\n                        // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n                        // attributes are not guaranteed to be returned in document order.\n                        // In particular, Edge/IE can return them out of order, so we cannot\n                        // assume a correspondance between part index and attribute index.\n                        let count = 0;\n                        for (let i = 0; i < attributes.length; i++) {\n                            if (attributes[i].value.indexOf(marker) >= 0) {\n                                count++;\n                            }\n                        }\n                        while (count-- > 0) {\n                            // Get the template literal section leading up to the first\n                            // expression in this attribute\n                            const stringForPart = result.strings[partIndex];\n                            // Find the attribute name\n                            const name = lastAttributeNameRegex.exec(stringForPart)[2];\n                            // Find the corresponding attribute\n                            // All bound attributes have had a suffix added in\n                            // TemplateResult#getHTML to opt out of special attribute\n                            // handling. To look up the attribute value we also need to add\n                            // the suffix.\n                            const attributeLookupName = name.toLowerCase() + boundAttributeSuffix;\n                            const attributeValue = node.getAttribute(attributeLookupName);\n                            const strings = attributeValue.split(markerRegex);\n                            this.parts.push({ type: 'attribute', index, name, strings });\n                            node.removeAttribute(attributeLookupName);\n                            partIndex += strings.length - 1;\n                        }\n                    }\n                    if (node.tagName === 'TEMPLATE') {\n                        _prepareTemplate(node);\n                    }\n                }\n                else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n                    const data = node.data;\n                    if (data.indexOf(marker) >= 0) {\n                        const parent = node.parentNode;\n                        const strings = data.split(markerRegex);\n                        const lastIndex = strings.length - 1;\n                        // Generate a new text node for each literal section\n                        // These nodes are also used as the markers for node parts\n                        for (let i = 0; i < lastIndex; i++) {\n                            parent.insertBefore((strings[i] === '') ? createMarker() :\n                                document.createTextNode(strings[i]), node);\n                            this.parts.push({ type: 'node', index: ++index });\n                        }\n                        // If there's no text, we must insert a comment to mark our place.\n                        // Else, we can trust it will stick around after cloning.\n                        if (strings[lastIndex] === '') {\n                            parent.insertBefore(createMarker(), node);\n                            nodesToRemove.push(node);\n                        }\n                        else {\n                            node.data = strings[lastIndex];\n                        }\n                        // We have a part for each match found\n                        partIndex += lastIndex;\n                    }\n                }\n                else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n                    if (node.data === marker) {\n                        const parent = node.parentNode;\n                        // Add a new marker node to be the startNode of the Part if any of\n                        // the following are true:\n                        //  * We don't have a previousSibling\n                        //  * The previousSibling is already the start of a previous part\n                        if (node.previousSibling === null || index === lastPartIndex) {\n                            index++;\n                            parent.insertBefore(createMarker(), node);\n                        }\n                        lastPartIndex = index;\n                        this.parts.push({ type: 'node', index });\n                        // If we don't have a nextSibling, keep this node so we have an end.\n                        // Else, we can remove it to save future costs.\n                        if (node.nextSibling === null) {\n                            node.data = '';\n                        }\n                        else {\n                            nodesToRemove.push(node);\n                            index--;\n                        }\n                        partIndex++;\n                    }\n                    else {\n                        let i = -1;\n                        while ((i = node.data.indexOf(marker, i + 1)) !==\n                            -1) {\n                            // Comment node has a binding marker inside, make an inactive part\n                            // The binding won't work, but subsequent bindings will\n                            // TODO (justinfagnani): consider whether it's even worth it to\n                            // make bindings in comments work\n                            this.parts.push({ type: 'node', index: -1 });\n                        }\n                    }\n                }\n            }\n        };\n        _prepareTemplate(element);\n        // Remove text binding nodes after the walk to not disturb the TreeWalker\n        for (const n of nodesToRemove) {\n            n.parentNode.removeChild(n);\n        }\n    }\n}\nexport const isTemplatePartActive = (part) => part.index !== -1;\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#attributes-0\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-character\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex = /([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \\x09\\x0a\\x0c\\x0d\"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n//# sourceMappingURL=template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { isCEPolyfill } from './dom.js';\nimport { isTemplatePartActive } from './template.js';\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n    constructor(template, processor, options) {\n        this._parts = [];\n        this.template = template;\n        this.processor = processor;\n        this.options = options;\n    }\n    update(values) {\n        let i = 0;\n        for (const part of this._parts) {\n            if (part !== undefined) {\n                part.setValue(values[i]);\n            }\n            i++;\n        }\n        for (const part of this._parts) {\n            if (part !== undefined) {\n                part.commit();\n            }\n        }\n    }\n    _clone() {\n        // When using the Custom Elements polyfill, clone the node, rather than\n        // importing it, to keep the fragment in the template's document. This\n        // leaves the fragment inert so custom elements won't upgrade and\n        // potentially modify their contents by creating a polyfilled ShadowRoot\n        // while we traverse the tree.\n        const fragment = isCEPolyfill ?\n            this.template.element.content.cloneNode(true) :\n            document.importNode(this.template.element.content, true);\n        const parts = this.template.parts;\n        let partIndex = 0;\n        let nodeIndex = 0;\n        const _prepareInstance = (fragment) => {\n            // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be\n            // null\n            const walker = document.createTreeWalker(fragment, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n            let node = walker.nextNode();\n            // Loop through all the nodes and parts of a template\n            while (partIndex < parts.length && node !== null) {\n                const part = parts[partIndex];\n                // Consecutive Parts may have the same node index, in the case of\n                // multiple bound attributes on an element. So each iteration we either\n                // increment the nodeIndex, if we aren't on a node with a part, or the\n                // partIndex if we are. By not incrementing the nodeIndex when we find a\n                // part, we allow for the next part to be associated with the current\n                // node if neccessasry.\n                if (!isTemplatePartActive(part)) {\n                    this._parts.push(undefined);\n                    partIndex++;\n                }\n                else if (nodeIndex === part.index) {\n                    if (part.type === 'node') {\n                        const part = this.processor.handleTextExpression(this.options);\n                        part.insertAfterNode(node.previousSibling);\n                        this._parts.push(part);\n                    }\n                    else {\n                        this._parts.push(...this.processor.handleAttributeExpressions(node, part.name, part.strings, this.options));\n                    }\n                    partIndex++;\n                }\n                else {\n                    nodeIndex++;\n                    if (node.nodeName === 'TEMPLATE') {\n                        _prepareInstance(node.content);\n                    }\n                    node = walker.nextNode();\n                }\n            }\n        };\n        _prepareInstance(fragment);\n        if (isCEPolyfill) {\n            document.adoptNode(fragment);\n            customElements.upgrade(fragment);\n        }\n        return fragment;\n    }\n}\n//# sourceMappingURL=template-instance.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { reparentNodes } from './dom.js';\nimport { boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker } from './template.js';\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n    constructor(strings, values, type, processor) {\n        this.strings = strings;\n        this.values = values;\n        this.type = type;\n        this.processor = processor;\n    }\n    /**\n     * Returns a string of HTML used to create a `<template>` element.\n     */\n    getHTML() {\n        const endIndex = this.strings.length - 1;\n        let html = '';\n        for (let i = 0; i < endIndex; i++) {\n            const s = this.strings[i];\n            // This exec() call does two things:\n            // 1) Appends a suffix to the bound attribute name to opt out of special\n            // attribute value parsing that IE11 and Edge do, like for style and\n            // many SVG attributes. The Template class also appends the same suffix\n            // when looking up attributes to create Parts.\n            // 2) Adds an unquoted-attribute-safe marker for the first expression in\n            // an attribute. Subsequent attribute expressions will use node markers,\n            // and this is safe since attributes with multiple expressions are\n            // guaranteed to be quoted.\n            const match = lastAttributeNameRegex.exec(s);\n            if (match) {\n                // We're starting a new bound attribute.\n                // Add the safe attribute suffix, and use unquoted-attribute-safe\n                // marker.\n                html += s.substr(0, match.index) + match[1] + match[2] +\n                    boundAttributeSuffix + match[3] + marker;\n            }\n            else {\n                // We're either in a bound node, or trailing bound attribute.\n                // Either way, nodeMarker is safe to use.\n                html += s + nodeMarker;\n            }\n        }\n        return html + this.strings[endIndex];\n    }\n    getTemplateElement() {\n        const template = document.createElement('template');\n        template.innerHTML = this.getHTML();\n        return template;\n    }\n}\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTMl in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n    getHTML() {\n        return `<svg>${super.getHTML()}</svg>`;\n    }\n    getTemplateElement() {\n        const template = super.getTemplateElement();\n        const content = template.content;\n        const svgElement = content.firstChild;\n        content.removeChild(svgElement);\n        reparentNodes(content, svgElement.firstChild);\n        return template;\n    }\n}\n//# sourceMappingURL=template-result.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { isDirective } from './directive.js';\nimport { removeNodes } from './dom.js';\nimport { noChange, nothing } from './part.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { TemplateResult } from './template-result.js';\nimport { createMarker } from './template.js';\nexport const isPrimitive = (value) => {\n    return (value === null ||\n        !(typeof value === 'object' || typeof value === 'function'));\n};\n/**\n * Sets attribute values for AttributeParts, so that the value is only set once\n * even if there are multiple parts for an attribute.\n */\nexport class AttributeCommitter {\n    constructor(element, name, strings) {\n        this.dirty = true;\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n        this.parts = [];\n        for (let i = 0; i < strings.length - 1; i++) {\n            this.parts[i] = this._createPart();\n        }\n    }\n    /**\n     * Creates a single part. Override this to create a differnt type of part.\n     */\n    _createPart() {\n        return new AttributePart(this);\n    }\n    _getValue() {\n        const strings = this.strings;\n        const l = strings.length - 1;\n        let text = '';\n        for (let i = 0; i < l; i++) {\n            text += strings[i];\n            const part = this.parts[i];\n            if (part !== undefined) {\n                const v = part.value;\n                if (v != null &&\n                    (Array.isArray(v) ||\n                        // tslint:disable-next-line:no-any\n                        typeof v !== 'string' && v[Symbol.iterator])) {\n                    for (const t of v) {\n                        text += typeof t === 'string' ? t : String(t);\n                    }\n                }\n                else {\n                    text += typeof v === 'string' ? v : String(v);\n                }\n            }\n        }\n        text += strings[l];\n        return text;\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            this.element.setAttribute(this.name, this._getValue());\n        }\n    }\n}\nexport class AttributePart {\n    constructor(comitter) {\n        this.value = undefined;\n        this.committer = comitter;\n    }\n    setValue(value) {\n        if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n            this.value = value;\n            // If the value is a not a directive, dirty the committer so that it'll\n            // call setAttribute. If the value is a directive, it'll dirty the\n            // committer if it calls setValue().\n            if (!isDirective(value)) {\n                this.committer.dirty = true;\n            }\n        }\n    }\n    commit() {\n        while (isDirective(this.value)) {\n            const directive = this.value;\n            this.value = noChange;\n            directive(this);\n        }\n        if (this.value === noChange) {\n            return;\n        }\n        this.committer.commit();\n    }\n}\nexport class NodePart {\n    constructor(options) {\n        this.value = undefined;\n        this._pendingValue = undefined;\n        this.options = options;\n    }\n    /**\n     * Inserts this part into a container.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendInto(container) {\n        this.startNode = container.appendChild(createMarker());\n        this.endNode = container.appendChild(createMarker());\n    }\n    /**\n     * Inserts this part between `ref` and `ref`'s next sibling. Both `ref` and\n     * its next sibling must be static, unchanging nodes such as those that appear\n     * in a literal section of a template.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterNode(ref) {\n        this.startNode = ref;\n        this.endNode = ref.nextSibling;\n    }\n    /**\n     * Appends this part into a parent part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendIntoPart(part) {\n        part._insert(this.startNode = createMarker());\n        part._insert(this.endNode = createMarker());\n    }\n    /**\n     * Appends this part after `ref`\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterPart(ref) {\n        ref._insert(this.startNode = createMarker());\n        this.endNode = ref.endNode;\n        ref.endNode = this.startNode;\n    }\n    setValue(value) {\n        this._pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this._pendingValue)) {\n            const directive = this._pendingValue;\n            this._pendingValue = noChange;\n            directive(this);\n        }\n        const value = this._pendingValue;\n        if (value === noChange) {\n            return;\n        }\n        if (isPrimitive(value)) {\n            if (value !== this.value) {\n                this._commitText(value);\n            }\n        }\n        else if (value instanceof TemplateResult) {\n            this._commitTemplateResult(value);\n        }\n        else if (value instanceof Node) {\n            this._commitNode(value);\n        }\n        else if (Array.isArray(value) ||\n            // tslint:disable-next-line:no-any\n            value[Symbol.iterator]) {\n            this._commitIterable(value);\n        }\n        else if (value === nothing) {\n            this.value = nothing;\n            this.clear();\n        }\n        else {\n            // Fallback, will render the string representation\n            this._commitText(value);\n        }\n    }\n    _insert(node) {\n        this.endNode.parentNode.insertBefore(node, this.endNode);\n    }\n    _commitNode(value) {\n        if (this.value === value) {\n            return;\n        }\n        this.clear();\n        this._insert(value);\n        this.value = value;\n    }\n    _commitText(value) {\n        const node = this.startNode.nextSibling;\n        value = value == null ? '' : value;\n        if (node === this.endNode.previousSibling &&\n            node.nodeType === 3 /* Node.TEXT_NODE */) {\n            // If we only have a single text node between the markers, we can just\n            // set its value, rather than replacing it.\n            // TODO(justinfagnani): Can we just check if this.value is primitive?\n            node.data = value;\n        }\n        else {\n            this._commitNode(document.createTextNode(typeof value === 'string' ? value : String(value)));\n        }\n        this.value = value;\n    }\n    _commitTemplateResult(value) {\n        const template = this.options.templateFactory(value);\n        if (this.value instanceof TemplateInstance &&\n            this.value.template === template) {\n            this.value.update(value.values);\n        }\n        else {\n            // Make sure we propagate the template processor from the TemplateResult\n            // so that we use its syntax extension, etc. The template factory comes\n            // from the render function options so that it can control template\n            // caching and preprocessing.\n            const instance = new TemplateInstance(template, value.processor, this.options);\n            const fragment = instance._clone();\n            instance.update(value.values);\n            this._commitNode(fragment);\n            this.value = instance;\n        }\n    }\n    _commitIterable(value) {\n        // For an Iterable, we create a new InstancePart per item, then set its\n        // value to the item. This is a little bit of overhead for every item in\n        // an Iterable, but it lets us recurse easily and efficiently update Arrays\n        // of TemplateResults that will be commonly returned from expressions like:\n        // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n        // If _value is an array, then the previous render was of an\n        // iterable and _value will contain the NodeParts from the previous\n        // render. If _value is not an array, clear this part and make a new\n        // array for NodeParts.\n        if (!Array.isArray(this.value)) {\n            this.value = [];\n            this.clear();\n        }\n        // Lets us keep track of how many items we stamped so we can clear leftover\n        // items from a previous render\n        const itemParts = this.value;\n        let partIndex = 0;\n        let itemPart;\n        for (const item of value) {\n            // Try to reuse an existing part\n            itemPart = itemParts[partIndex];\n            // If no existing part, create a new one\n            if (itemPart === undefined) {\n                itemPart = new NodePart(this.options);\n                itemParts.push(itemPart);\n                if (partIndex === 0) {\n                    itemPart.appendIntoPart(this);\n                }\n                else {\n                    itemPart.insertAfterPart(itemParts[partIndex - 1]);\n                }\n            }\n            itemPart.setValue(item);\n            itemPart.commit();\n            partIndex++;\n        }\n        if (partIndex < itemParts.length) {\n            // Truncate the parts array so _value reflects the current state\n            itemParts.length = partIndex;\n            this.clear(itemPart && itemPart.endNode);\n        }\n    }\n    clear(startNode = this.startNode) {\n        removeNodes(this.startNode.parentNode, startNode.nextSibling, this.endNode);\n    }\n}\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart {\n    constructor(element, name, strings) {\n        this.value = undefined;\n        this._pendingValue = undefined;\n        if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n            throw new Error('Boolean attributes can only contain a single expression');\n        }\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n    }\n    setValue(value) {\n        this._pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this._pendingValue)) {\n            const directive = this._pendingValue;\n            this._pendingValue = noChange;\n            directive(this);\n        }\n        if (this._pendingValue === noChange) {\n            return;\n        }\n        const value = !!this._pendingValue;\n        if (this.value !== value) {\n            if (value) {\n                this.element.setAttribute(this.name, '');\n            }\n            else {\n                this.element.removeAttribute(this.name);\n            }\n        }\n        this.value = value;\n        this._pendingValue = noChange;\n    }\n}\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n    constructor(element, name, strings) {\n        super(element, name, strings);\n        this.single =\n            (strings.length === 2 && strings[0] === '' && strings[1] === '');\n    }\n    _createPart() {\n        return new PropertyPart(this);\n    }\n    _getValue() {\n        if (this.single) {\n            return this.parts[0].value;\n        }\n        return super._getValue();\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            // tslint:disable-next-line:no-any\n            this.element[this.name] = this._getValue();\n        }\n    }\n}\nexport class PropertyPart extends AttributePart {\n}\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the thrid\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\ntry {\n    const options = {\n        get capture() {\n            eventOptionsSupported = true;\n            return false;\n        }\n    };\n    // tslint:disable-next-line:no-any\n    window.addEventListener('test', options, options);\n    // tslint:disable-next-line:no-any\n    window.removeEventListener('test', options, options);\n}\ncatch (_e) {\n}\nexport class EventPart {\n    constructor(element, eventName, eventContext) {\n        this.value = undefined;\n        this._pendingValue = undefined;\n        this.element = element;\n        this.eventName = eventName;\n        this.eventContext = eventContext;\n        this._boundHandleEvent = (e) => this.handleEvent(e);\n    }\n    setValue(value) {\n        this._pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this._pendingValue)) {\n            const directive = this._pendingValue;\n            this._pendingValue = noChange;\n            directive(this);\n        }\n        if (this._pendingValue === noChange) {\n            return;\n        }\n        const newListener = this._pendingValue;\n        const oldListener = this.value;\n        const shouldRemoveListener = newListener == null ||\n            oldListener != null &&\n                (newListener.capture !== oldListener.capture ||\n                    newListener.once !== oldListener.once ||\n                    newListener.passive !== oldListener.passive);\n        const shouldAddListener = newListener != null && (oldListener == null || shouldRemoveListener);\n        if (shouldRemoveListener) {\n            this.element.removeEventListener(this.eventName, this._boundHandleEvent, this._options);\n        }\n        if (shouldAddListener) {\n            this._options = getOptions(newListener);\n            this.element.addEventListener(this.eventName, this._boundHandleEvent, this._options);\n        }\n        this.value = newListener;\n        this._pendingValue = noChange;\n    }\n    handleEvent(event) {\n        if (typeof this.value === 'function') {\n            this.value.call(this.eventContext || this.element, event);\n        }\n        else {\n            this.value.handleEvent(event);\n        }\n    }\n}\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o) => o &&\n    (eventOptionsSupported ?\n        { capture: o.capture, passive: o.passive, once: o.once } :\n        o.capture);\n//# sourceMappingURL=parts.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter } from './parts.js';\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor {\n    /**\n     * Create parts for an attribute-position binding, given the event, attribute\n     * name, and string literals.\n     *\n     * @param element The element containing the binding\n     * @param name  The attribute name\n     * @param strings The string literals. There are always at least two strings,\n     *   event for fully-controlled bindings with a single expression.\n     */\n    handleAttributeExpressions(element, name, strings, options) {\n        const prefix = name[0];\n        if (prefix === '.') {\n            const comitter = new PropertyCommitter(element, name.slice(1), strings);\n            return comitter.parts;\n        }\n        if (prefix === '@') {\n            return [new EventPart(element, name.slice(1), options.eventContext)];\n        }\n        if (prefix === '?') {\n            return [new BooleanAttributePart(element, name.slice(1), strings)];\n        }\n        const comitter = new AttributeCommitter(element, name, strings);\n        return comitter.parts;\n    }\n    /**\n     * Create parts for a text-position binding.\n     * @param templateFactory\n     */\n    handleTextExpression(options) {\n        return new NodePart(options);\n    }\n}\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n//# sourceMappingURL=default-template-processor.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { marker, Template } from './template.js';\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result) {\n    let templateCache = templateCaches.get(result.type);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(result.type, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    // If the TemplateStringsArray is new, generate a key from the strings\n    // This key is shared between all templates with identical content\n    const key = result.strings.join(marker);\n    // Check if we already have a Template for this key\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        // If we have not seen this key before, create a new Template\n        template = new Template(result, result.getTemplateElement());\n        // Cache the Template for this key\n        templateCache.keyString.set(key, template);\n    }\n    // Cache all future queries for this TemplateStringsArray\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n}\nexport const templateCaches = new Map();\n//# sourceMappingURL=template-factory.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { removeNodes } from './dom.js';\nimport { NodePart } from './parts.js';\nimport { templateFactory } from './template-factory.js';\nexport const parts = new WeakMap();\n/**\n * Renders a template to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result a TemplateResult created by evaluating a template tag like\n *     `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render = (result, container, options) => {\n    let part = parts.get(container);\n    if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart(Object.assign({ templateFactory }, options)));\n        part.appendInto(container);\n    }\n    part.setValue(result);\n    part.commit();\n};\n//# sourceMappingURL=render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @module lit-html\n * @preferred\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { defaultTemplateProcessor } from './lib/default-template-processor.js';\nimport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { DefaultTemplateProcessor, defaultTemplateProcessor } from './lib/default-template-processor.js';\nexport { directive, isDirective } from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport { removeNodes, reparentNodes } from './lib/dom.js';\nexport { noChange, nothing } from './lib/part.js';\nexport { AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isPrimitive, NodePart, PropertyCommitter, PropertyPart } from './lib/parts.js';\nexport { parts, render } from './lib/render.js';\nexport { templateCaches, templateFactory } from './lib/template-factory.js';\nexport { TemplateInstance } from './lib/template-instance.js';\nexport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { createMarker, isTemplatePartActive, Template } from './lib/template.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.0.0');\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings, ...values) => new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings, ...values) => new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n//# sourceMappingURL=lit-html.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module shady-render\n */\nimport { isTemplatePartActive } from './template.js';\nconst walkerNodeFilter = 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */;\n/**\n * Removes the list of nodes from a Template safely. In addition to removing\n * nodes from the Template, the Template part indices are updated to match\n * the mutated Template DOM.\n *\n * As the template is walked the removal state is tracked and\n * part indices are adjusted as needed.\n *\n * div\n *   div#1 (remove) <-- start removing (removing node is div#1)\n *     div\n *       div#2 (remove)  <-- continue removing (removing node is still div#1)\n *         div\n * div <-- stop removing since previous sibling is the removing node (div#1,\n * removed 4 nodes)\n */\nexport function removeNodesFromTemplate(template, nodesToRemove) {\n    const { element: { content }, parts } = template;\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let part = parts[partIndex];\n    let nodeIndex = -1;\n    let removeCount = 0;\n    const nodesToRemoveInTemplate = [];\n    let currentRemovingNode = null;\n    while (walker.nextNode()) {\n        nodeIndex++;\n        const node = walker.currentNode;\n        // End removal if stepped past the removing node\n        if (node.previousSibling === currentRemovingNode) {\n            currentRemovingNode = null;\n        }\n        // A node to remove was found in the template\n        if (nodesToRemove.has(node)) {\n            nodesToRemoveInTemplate.push(node);\n            // Track node we're removing\n            if (currentRemovingNode === null) {\n                currentRemovingNode = node;\n            }\n        }\n        // When removing, increment count by which to adjust subsequent part indices\n        if (currentRemovingNode !== null) {\n            removeCount++;\n        }\n        while (part !== undefined && part.index === nodeIndex) {\n            // If part is in a removed node deactivate it by setting index to -1 or\n            // adjust the index as needed.\n            part.index = currentRemovingNode !== null ? -1 : part.index - removeCount;\n            // go to the next active part.\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n            part = parts[partIndex];\n        }\n    }\n    nodesToRemoveInTemplate.forEach((n) => n.parentNode.removeChild(n));\n}\nconst countNodes = (node) => {\n    let count = (node.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */) ? 0 : 1;\n    const walker = document.createTreeWalker(node, walkerNodeFilter, null, false);\n    while (walker.nextNode()) {\n        count++;\n    }\n    return count;\n};\nconst nextActiveIndexInTemplateParts = (parts, startIndex = -1) => {\n    for (let i = startIndex + 1; i < parts.length; i++) {\n        const part = parts[i];\n        if (isTemplatePartActive(part)) {\n            return i;\n        }\n    }\n    return -1;\n};\n/**\n * Inserts the given node into the Template, optionally before the given\n * refNode. In addition to inserting the node into the Template, the Template\n * part indices are updated to match the mutated Template DOM.\n */\nexport function insertNodeIntoTemplate(template, node, refNode = null) {\n    const { element: { content }, parts } = template;\n    // If there's no refNode, then put node at end of template.\n    // No part indices need to be shifted in this case.\n    if (refNode === null || refNode === undefined) {\n        content.appendChild(node);\n        return;\n    }\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let insertCount = 0;\n    let walkerIndex = -1;\n    while (walker.nextNode()) {\n        walkerIndex++;\n        const walkerNode = walker.currentNode;\n        if (walkerNode === refNode) {\n            insertCount = countNodes(node);\n            refNode.parentNode.insertBefore(node, refNode);\n        }\n        while (partIndex !== -1 && parts[partIndex].index === walkerIndex) {\n            // If we've inserted the node, simply adjust all subsequent parts\n            if (insertCount > 0) {\n                while (partIndex !== -1) {\n                    parts[partIndex].index += insertCount;\n                    partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n                }\n                return;\n            }\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n        }\n    }\n}\n//# sourceMappingURL=modify-template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * Module to add shady DOM/shady CSS polyfill support to lit-html template\n * rendering. See the [[render]] method for details.\n *\n * @module shady-render\n * @preferred\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { removeNodes } from './dom.js';\nimport { insertNodeIntoTemplate, removeNodesFromTemplate } from './modify-template.js';\nimport { parts, render as litRender } from './render.js';\nimport { templateCaches } from './template-factory.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { TemplateResult } from './template-result.js';\nimport { marker, Template } from './template.js';\nexport { html, svg, TemplateResult } from '../lit-html.js';\n// Get a key to lookup in `templateCaches`.\nconst getTemplateCacheKey = (type, scopeName) => `${type}--${scopeName}`;\nlet compatibleShadyCSSVersion = true;\nif (typeof window.ShadyCSS === 'undefined') {\n    compatibleShadyCSSVersion = false;\n}\nelse if (typeof window.ShadyCSS.prepareTemplateDom === 'undefined') {\n    console.warn(`Incompatible ShadyCSS version detected.` +\n        `Please update to at least @webcomponents/webcomponentsjs@2.0.2 and` +\n        `@webcomponents/shadycss@1.3.1.`);\n    compatibleShadyCSSVersion = false;\n}\n/**\n * Template factory which scopes template DOM using ShadyCSS.\n * @param scopeName {string}\n */\nconst shadyTemplateFactory = (scopeName) => (result) => {\n    const cacheKey = getTemplateCacheKey(result.type, scopeName);\n    let templateCache = templateCaches.get(cacheKey);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(cacheKey, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    const key = result.strings.join(marker);\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        const element = result.getTemplateElement();\n        if (compatibleShadyCSSVersion) {\n            window.ShadyCSS.prepareTemplateDom(element, scopeName);\n        }\n        template = new Template(result, element);\n        templateCache.keyString.set(key, template);\n    }\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n};\nconst TEMPLATE_TYPES = ['html', 'svg'];\n/**\n * Removes all style elements from Templates for the given scopeName.\n */\nconst removeStylesFromLitTemplates = (scopeName) => {\n    TEMPLATE_TYPES.forEach((type) => {\n        const templates = templateCaches.get(getTemplateCacheKey(type, scopeName));\n        if (templates !== undefined) {\n            templates.keyString.forEach((template) => {\n                const { element: { content } } = template;\n                // IE 11 doesn't support the iterable param Set constructor\n                const styles = new Set();\n                Array.from(content.querySelectorAll('style')).forEach((s) => {\n                    styles.add(s);\n                });\n                removeNodesFromTemplate(template, styles);\n            });\n        }\n    });\n};\nconst shadyRenderSet = new Set();\n/**\n * For the given scope name, ensures that ShadyCSS style scoping is performed.\n * This is done just once per scope name so the fragment and template cannot\n * be modified.\n * (1) extracts styles from the rendered fragment and hands them to ShadyCSS\n * to be scoped and appended to the document\n * (2) removes style elements from all lit-html Templates for this scope name.\n *\n * Note, <style> elements can only be placed into templates for the\n * initial rendering of the scope. If <style> elements are included in templates\n * dynamically rendered to the scope (after the first scope render), they will\n * not be scoped and the <style> will be left in the template and rendered\n * output.\n */\nconst prepareTemplateStyles = (renderedDOM, template, scopeName) => {\n    shadyRenderSet.add(scopeName);\n    // Move styles out of rendered DOM and store.\n    const styles = renderedDOM.querySelectorAll('style');\n    // If there are no styles, skip unnecessary work\n    if (styles.length === 0) {\n        // Ensure prepareTemplateStyles is called to support adding\n        // styles via `prepareAdoptedCssText` since that requires that\n        // `prepareTemplateStyles` is called.\n        window.ShadyCSS.prepareTemplateStyles(template.element, scopeName);\n        return;\n    }\n    const condensedStyle = document.createElement('style');\n    // Collect styles into a single style. This helps us make sure ShadyCSS\n    // manipulations will not prevent us from being able to fix up template\n    // part indices.\n    // NOTE: collecting styles is inefficient for browsers but ShadyCSS\n    // currently does this anyway. When it does not, this should be changed.\n    for (let i = 0; i < styles.length; i++) {\n        const style = styles[i];\n        style.parentNode.removeChild(style);\n        condensedStyle.textContent += style.textContent;\n    }\n    // Remove styles from nested templates in this scope.\n    removeStylesFromLitTemplates(scopeName);\n    // And then put the condensed style into the \"root\" template passed in as\n    // `template`.\n    insertNodeIntoTemplate(template, condensedStyle, template.element.content.firstChild);\n    // Note, it's important that ShadyCSS gets the template that `lit-html`\n    // will actually render so that it can update the style inside when\n    // needed (e.g. @apply native Shadow DOM case).\n    window.ShadyCSS.prepareTemplateStyles(template.element, scopeName);\n    if (window.ShadyCSS.nativeShadow) {\n        // When in native Shadow DOM, re-add styling to rendered content using\n        // the style ShadyCSS produced.\n        const style = template.element.content.querySelector('style');\n        renderedDOM.insertBefore(style.cloneNode(true), renderedDOM.firstChild);\n    }\n    else {\n        // When not in native Shadow DOM, at this point ShadyCSS will have\n        // removed the style from the lit template and parts will be broken as a\n        // result. To fix this, we put back the style node ShadyCSS removed\n        // and then tell lit to remove that node from the template.\n        // NOTE, ShadyCSS creates its own style so we can safely add/remove\n        // `condensedStyle` here.\n        template.element.content.insertBefore(condensedStyle, template.element.content.firstChild);\n        const removes = new Set();\n        removes.add(condensedStyle);\n        removeNodesFromTemplate(template, removes);\n    }\n};\n/**\n * Extension to the standard `render` method which supports rendering\n * to ShadowRoots when the ShadyDOM (https://github.com/webcomponents/shadydom)\n * and ShadyCSS (https://github.com/webcomponents/shadycss) polyfills are used\n * or when the webcomponentsjs\n * (https://github.com/webcomponents/webcomponentsjs) polyfill is used.\n *\n * Adds a `scopeName` option which is used to scope element DOM and stylesheets\n * when native ShadowDOM is unavailable. The `scopeName` will be added to\n * the class attribute of all rendered DOM. In addition, any style elements will\n * be automatically re-written with this `scopeName` selector and moved out\n * of the rendered DOM and into the document `<head>`.\n *\n * It is common to use this render method in conjunction with a custom element\n * which renders a shadowRoot. When this is done, typically the element's\n * `localName` should be used as the `scopeName`.\n *\n * In addition to DOM scoping, ShadyCSS also supports a basic shim for css\n * custom properties (needed only on older browsers like IE11) and a shim for\n * a deprecated feature called `@apply` that supports applying a set of css\n * custom properties to a given location.\n *\n * Usage considerations:\n *\n * * Part values in `<style>` elements are only applied the first time a given\n * `scopeName` renders. Subsequent changes to parts in style elements will have\n * no effect. Because of this, parts in style elements should only be used for\n * values that will never change, for example parts that set scope-wide theme\n * values or parts which render shared style elements.\n *\n * * Note, due to a limitation of the ShadyDOM polyfill, rendering in a\n * custom element's `constructor` is not supported. Instead rendering should\n * either done asynchronously, for example at microtask timing (for example\n * `Promise.resolve()`), or be deferred until the first time the element's\n * `connectedCallback` runs.\n *\n * Usage considerations when using shimmed custom properties or `@apply`:\n *\n * * Whenever any dynamic changes are made which affect\n * css custom properties, `ShadyCSS.styleElement(element)` must be called\n * to update the element. There are two cases when this is needed:\n * (1) the element is connected to a new parent, (2) a class is added to the\n * element that causes it to match different custom properties.\n * To address the first case when rendering a custom element, `styleElement`\n * should be called in the element's `connectedCallback`.\n *\n * * Shimmed custom properties may only be defined either for an entire\n * shadowRoot (for example, in a `:host` rule) or via a rule that directly\n * matches an element with a shadowRoot. In other words, instead of flowing from\n * parent to child as do native css custom properties, shimmed custom properties\n * flow only from shadowRoots to nested shadowRoots.\n *\n * * When using `@apply` mixing css shorthand property names with\n * non-shorthand names (for example `border` and `border-width`) is not\n * supported.\n */\nexport const render = (result, container, options) => {\n    const scopeName = options.scopeName;\n    const hasRendered = parts.has(container);\n    const needsScoping = container instanceof ShadowRoot &&\n        compatibleShadyCSSVersion && result instanceof TemplateResult;\n    // Handle first render to a scope specially...\n    const firstScopeRender = needsScoping && !shadyRenderSet.has(scopeName);\n    // On first scope render, render into a fragment; this cannot be a single\n    // fragment that is reused since nested renders can occur synchronously.\n    const renderContainer = firstScopeRender ? document.createDocumentFragment() : container;\n    litRender(result, renderContainer, Object.assign({ templateFactory: shadyTemplateFactory(scopeName) }, options));\n    // When performing first scope render,\n    // (1) We've rendered into a fragment so that there's a chance to\n    // `prepareTemplateStyles` before sub-elements hit the DOM\n    // (which might cause them to render based on a common pattern of\n    // rendering in a custom element's `connectedCallback`);\n    // (2) Scope the template with ShadyCSS one time only for this scope.\n    // (3) Render the fragment into the container and make sure the\n    // container knows its `part` is the one we just rendered. This ensures\n    // DOM will be re-used on subsequent renders.\n    if (firstScopeRender) {\n        const part = parts.get(renderContainer);\n        parts.delete(renderContainer);\n        if (part.value instanceof TemplateInstance) {\n            prepareTemplateStyles(renderContainer, part.value.template, scopeName);\n        }\n        removeNodes(container, container.firstChild);\n        container.appendChild(renderContainer);\n        parts.set(container, part);\n    }\n    // After elements have hit the DOM, update styling if this is the\n    // initial render to this container.\n    // This is needed whenever dynamic changes are made so it would be\n    // safest to do every render; however, this would regress performance\n    // so we leave it up to the user to call `ShadyCSSS.styleElement`\n    // for dynamic changes.\n    if (!hasRendered && needsScoping) {\n        window.ShadyCSS.styleElement(container.host);\n    }\n};\n//# sourceMappingURL=shady-render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\nwindow.JSCompiler_renameProperty =\n    (prop, _obj) => prop;\nexport const defaultConverter = {\n    toAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value ? '' : null;\n            case Object:\n            case Array:\n                // if the value is `null` or `undefined` pass this through\n                // to allow removing/no change behavior.\n                return value == null ? value : JSON.stringify(value);\n        }\n        return value;\n    },\n    fromAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value !== null;\n            case Number:\n                return value === null ? null : Number(value);\n            case Object:\n            case Array:\n                return JSON.parse(value);\n        }\n        return value;\n    }\n};\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual = (value, old) => {\n    // This ensures (old==NaN, value==NaN) always returns false\n    return old !== value && (old === old || value === value);\n};\nconst defaultPropertyDeclaration = {\n    attribute: true,\n    type: String,\n    converter: defaultConverter,\n    reflect: false,\n    hasChanged: notEqual\n};\nconst microtaskPromise = Promise.resolve(true);\nconst STATE_HAS_UPDATED = 1;\nconst STATE_UPDATE_REQUESTED = 1 << 2;\nconst STATE_IS_REFLECTING_TO_ATTRIBUTE = 1 << 3;\nconst STATE_IS_REFLECTING_TO_PROPERTY = 1 << 4;\nconst STATE_HAS_CONNECTED = 1 << 5;\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclassers to render updates as desired.\n */\nexport class UpdatingElement extends HTMLElement {\n    constructor() {\n        super();\n        this._updateState = 0;\n        this._instanceProperties = undefined;\n        this._updatePromise = microtaskPromise;\n        this._hasConnectedResolver = undefined;\n        /**\n         * Map with keys for any properties that have changed since the last\n         * update cycle with previous values.\n         */\n        this._changedProperties = new Map();\n        /**\n         * Map with keys of properties that should be reflected when updated.\n         */\n        this._reflectingProperties = undefined;\n        this.initialize();\n    }\n    /**\n     * Returns a list of attributes corresponding to the registered properties.\n     * @nocollapse\n     */\n    static get observedAttributes() {\n        // note: piggy backing on this to ensure we're finalized.\n        this.finalize();\n        const attributes = [];\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this._classProperties.forEach((v, p) => {\n            const attr = this._attributeNameForProperty(p, v);\n            if (attr !== undefined) {\n                this._attributeToPropertyMap.set(attr, p);\n                attributes.push(attr);\n            }\n        });\n        return attributes;\n    }\n    /**\n     * Ensures the private `_classProperties` property metadata is created.\n     * In addition to `finalize` this is also called in `createProperty` to\n     * ensure the `@property` decorator can add property metadata.\n     */\n    /** @nocollapse */\n    static _ensureClassProperties() {\n        // ensure private storage for property declarations.\n        if (!this.hasOwnProperty(JSCompiler_renameProperty('_classProperties', this))) {\n            this._classProperties = new Map();\n            // NOTE: Workaround IE11 not supporting Map constructor argument.\n            const superProperties = Object.getPrototypeOf(this)._classProperties;\n            if (superProperties !== undefined) {\n                superProperties.forEach((v, k) => this._classProperties.set(k, v));\n            }\n        }\n    }\n    /**\n     * Creates a property accessor on the element prototype if one does not exist.\n     * The property setter calls the property's `hasChanged` property option\n     * or uses a strict identity check to determine whether or not to request\n     * an update.\n     * @nocollapse\n     */\n    static createProperty(name, options = defaultPropertyDeclaration) {\n        // Note, since this can be called by the `@property` decorator which\n        // is called before `finalize`, we ensure storage exists for property\n        // metadata.\n        this._ensureClassProperties();\n        this._classProperties.set(name, options);\n        // Do not generate an accessor if the prototype already has one, since\n        // it would be lost otherwise and that would never be the user's intention;\n        // Instead, we expect users to call `requestUpdate` themselves from\n        // user-defined accessors. Note that if the super has an accessor we will\n        // still overwrite it\n        if (options.noAccessor || this.prototype.hasOwnProperty(name)) {\n            return;\n        }\n        const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n        Object.defineProperty(this.prototype, name, {\n            // tslint:disable-next-line:no-any no symbol in index\n            get() {\n                return this[key];\n            },\n            set(value) {\n                // tslint:disable-next-line:no-any no symbol in index\n                const oldValue = this[name];\n                // tslint:disable-next-line:no-any no symbol in index\n                this[key] = value;\n                this._requestUpdate(name, oldValue);\n            },\n            configurable: true,\n            enumerable: true\n        });\n    }\n    /**\n     * Creates property accessors for registered properties and ensures\n     * any superclasses are also finalized.\n     * @nocollapse\n     */\n    static finalize() {\n        if (this.hasOwnProperty(JSCompiler_renameProperty('finalized', this)) &&\n            this.finalized) {\n            return;\n        }\n        // finalize any superclasses\n        const superCtor = Object.getPrototypeOf(this);\n        if (typeof superCtor.finalize === 'function') {\n            superCtor.finalize();\n        }\n        this.finalized = true;\n        this._ensureClassProperties();\n        // initialize Map populated in observedAttributes\n        this._attributeToPropertyMap = new Map();\n        // make any properties\n        // Note, only process \"own\" properties since this element will inherit\n        // any properties defined on the superClass, and finalization ensures\n        // the entire prototype chain is finalized.\n        if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n            const props = this.properties;\n            // support symbols in properties (IE11 does not support this)\n            const propKeys = [\n                ...Object.getOwnPropertyNames(props),\n                ...(typeof Object.getOwnPropertySymbols === 'function') ?\n                    Object.getOwnPropertySymbols(props) :\n                    []\n            ];\n            // This for/of is ok because propKeys is an array\n            for (const p of propKeys) {\n                // note, use of `any` is due to TypeSript lack of support for symbol in\n                // index types\n                // tslint:disable-next-line:no-any no symbol in index\n                this.createProperty(p, props[p]);\n            }\n        }\n    }\n    /**\n     * Returns the property name for the given attribute `name`.\n     * @nocollapse\n     */\n    static _attributeNameForProperty(name, options) {\n        const attribute = options.attribute;\n        return attribute === false ?\n            undefined :\n            (typeof attribute === 'string' ?\n                attribute :\n                (typeof name === 'string' ? name.toLowerCase() : undefined));\n    }\n    /**\n     * Returns true if a property should request an update.\n     * Called when a property value is set and uses the `hasChanged`\n     * option for the property if present or a strict identity check.\n     * @nocollapse\n     */\n    static _valueHasChanged(value, old, hasChanged = notEqual) {\n        return hasChanged(value, old);\n    }\n    /**\n     * Returns the property value for the given attribute value.\n     * Called via the `attributeChangedCallback` and uses the property's\n     * `converter` or `converter.fromAttribute` property option.\n     * @nocollapse\n     */\n    static _propertyValueFromAttribute(value, options) {\n        const type = options.type;\n        const converter = options.converter || defaultConverter;\n        const fromAttribute = (typeof converter === 'function' ? converter : converter.fromAttribute);\n        return fromAttribute ? fromAttribute(value, type) : value;\n    }\n    /**\n     * Returns the attribute value for the given property value. If this\n     * returns undefined, the property will *not* be reflected to an attribute.\n     * If this returns null, the attribute will be removed, otherwise the\n     * attribute will be set to the value.\n     * This uses the property's `reflect` and `type.toAttribute` property options.\n     * @nocollapse\n     */\n    static _propertyValueToAttribute(value, options) {\n        if (options.reflect === undefined) {\n            return;\n        }\n        const type = options.type;\n        const converter = options.converter;\n        const toAttribute = converter && converter.toAttribute ||\n            defaultConverter.toAttribute;\n        return toAttribute(value, type);\n    }\n    /**\n     * Performs element initialization. By default captures any pre-set values for\n     * registered properties.\n     */\n    initialize() {\n        this._saveInstanceProperties();\n        // ensures first update will be caught by an early access of `updateComplete`\n        this._requestUpdate();\n    }\n    /**\n     * Fixes any properties set on the instance before upgrade time.\n     * Otherwise these would shadow the accessor and break these properties.\n     * The properties are stored in a Map which is played back after the\n     * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n     * (<=41), properties created for native platform properties like (`id` or\n     * `name`) may not have default values set in the element constructor. On\n     * these browsers native properties appear on instances and therefore their\n     * default value will overwrite any element default (e.g. if the element sets\n     * this.id = 'id' in the constructor, the 'id' will become '' since this is\n     * the native platform default).\n     */\n    _saveInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this.constructor\n            ._classProperties.forEach((_v, p) => {\n            if (this.hasOwnProperty(p)) {\n                const value = this[p];\n                delete this[p];\n                if (!this._instanceProperties) {\n                    this._instanceProperties = new Map();\n                }\n                this._instanceProperties.set(p, value);\n            }\n        });\n    }\n    /**\n     * Applies previously saved instance properties.\n     */\n    _applyInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        // tslint:disable-next-line:no-any\n        this._instanceProperties.forEach((v, p) => this[p] = v);\n        this._instanceProperties = undefined;\n    }\n    connectedCallback() {\n        this._updateState = this._updateState | STATE_HAS_CONNECTED;\n        // Ensure first connection completes an update. Updates cannot complete before\n        // connection and if one is pending connection the `_hasConnectionResolver`\n        // will exist. If so, resolve it to complete the update, otherwise\n        // requestUpdate.\n        if (this._hasConnectedResolver) {\n            this._hasConnectedResolver();\n            this._hasConnectedResolver = undefined;\n        }\n    }\n    /**\n     * Allows for `super.disconnectedCallback()` in extensions while\n     * reserving the possibility of making non-breaking feature additions\n     * when disconnecting at some point in the future.\n     */\n    disconnectedCallback() {\n    }\n    /**\n     * Synchronizes property values when attributes change.\n     */\n    attributeChangedCallback(name, old, value) {\n        if (old !== value) {\n            this._attributeToProperty(name, value);\n        }\n    }\n    _propertyToAttribute(name, value, options = defaultPropertyDeclaration) {\n        const ctor = this.constructor;\n        const attr = ctor._attributeNameForProperty(name, options);\n        if (attr !== undefined) {\n            const attrValue = ctor._propertyValueToAttribute(value, options);\n            // an undefined value does not change the attribute.\n            if (attrValue === undefined) {\n                return;\n            }\n            // Track if the property is being reflected to avoid\n            // setting the property again via `attributeChangedCallback`. Note:\n            // 1. this takes advantage of the fact that the callback is synchronous.\n            // 2. will behave incorrectly if multiple attributes are in the reaction\n            // stack at time of calling. However, since we process attributes\n            // in `update` this should not be possible (or an extreme corner case\n            // that we'd like to discover).\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_ATTRIBUTE;\n            if (attrValue == null) {\n                this.removeAttribute(attr);\n            }\n            else {\n                this.setAttribute(attr, attrValue);\n            }\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_ATTRIBUTE;\n        }\n    }\n    _attributeToProperty(name, value) {\n        // Use tracking info to avoid deserializing attribute value if it was\n        // just set from a property setter.\n        if (this._updateState & STATE_IS_REFLECTING_TO_ATTRIBUTE) {\n            return;\n        }\n        const ctor = this.constructor;\n        const propName = ctor._attributeToPropertyMap.get(name);\n        if (propName !== undefined) {\n            const options = ctor._classProperties.get(propName) || defaultPropertyDeclaration;\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_PROPERTY;\n            this[propName] =\n                // tslint:disable-next-line:no-any\n                ctor._propertyValueFromAttribute(value, options);\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_PROPERTY;\n        }\n    }\n    /**\n     * This private version of `requestUpdate` does not access or return the\n     * `updateComplete` promise. This promise can be overridden and is therefore\n     * not free to access.\n     */\n    _requestUpdate(name, oldValue) {\n        let shouldRequestUpdate = true;\n        // If we have a property key, perform property update steps.\n        if (name !== undefined) {\n            const ctor = this.constructor;\n            const options = ctor._classProperties.get(name) || defaultPropertyDeclaration;\n            if (ctor._valueHasChanged(this[name], oldValue, options.hasChanged)) {\n                if (!this._changedProperties.has(name)) {\n                    this._changedProperties.set(name, oldValue);\n                }\n                // Add to reflecting properties set.\n                // Note, it's important that every change has a chance to add the\n                // property to `_reflectingProperties`. This ensures setting\n                // attribute + property reflects correctly.\n                if (options.reflect === true &&\n                    !(this._updateState & STATE_IS_REFLECTING_TO_PROPERTY)) {\n                    if (this._reflectingProperties === undefined) {\n                        this._reflectingProperties = new Map();\n                    }\n                    this._reflectingProperties.set(name, options);\n                }\n            }\n            else {\n                // Abort the request if the property should not be considered changed.\n                shouldRequestUpdate = false;\n            }\n        }\n        if (!this._hasRequestedUpdate && shouldRequestUpdate) {\n            this._enqueueUpdate();\n        }\n    }\n    /**\n     * Requests an update which is processed asynchronously. This should\n     * be called when an element should update based on some state not triggered\n     * by setting a property. In this case, pass no arguments. It should also be\n     * called when manually implementing a property setter. In this case, pass the\n     * property `name` and `oldValue` to ensure that any configured property\n     * options are honored. Returns the `updateComplete` Promise which is resolved\n     * when the update completes.\n     *\n     * @param name {PropertyKey} (optional) name of requesting property\n     * @param oldValue {any} (optional) old value of requesting property\n     * @returns {Promise} A Promise that is resolved when the update completes.\n     */\n    requestUpdate(name, oldValue) {\n        this._requestUpdate(name, oldValue);\n        return this.updateComplete;\n    }\n    /**\n     * Sets up the element to asynchronously update.\n     */\n    async _enqueueUpdate() {\n        // Mark state updating...\n        this._updateState = this._updateState | STATE_UPDATE_REQUESTED;\n        let resolve;\n        let reject;\n        const previousUpdatePromise = this._updatePromise;\n        this._updatePromise = new Promise((res, rej) => {\n            resolve = res;\n            reject = rej;\n        });\n        try {\n            // Ensure any previous update has resolved before updating.\n            // This `await` also ensures that property changes are batched.\n            await previousUpdatePromise;\n        }\n        catch (e) {\n            // Ignore any previous errors. We only care that the previous cycle is\n            // done. Any error should have been handled in the previous update.\n        }\n        // Make sure the element has connected before updating.\n        if (!this._hasConnected) {\n            await new Promise((res) => this._hasConnectedResolver = res);\n        }\n        try {\n            const result = this.performUpdate();\n            // If `performUpdate` returns a Promise, we await it. This is done to\n            // enable coordinating updates with a scheduler. Note, the result is\n            // checked to avoid delaying an additional microtask unless we need to.\n            if (result != null) {\n                await result;\n            }\n        }\n        catch (e) {\n            reject(e);\n        }\n        resolve(!this._hasRequestedUpdate);\n    }\n    get _hasConnected() {\n        return (this._updateState & STATE_HAS_CONNECTED);\n    }\n    get _hasRequestedUpdate() {\n        return (this._updateState & STATE_UPDATE_REQUESTED);\n    }\n    get hasUpdated() {\n        return (this._updateState & STATE_HAS_UPDATED);\n    }\n    /**\n     * Performs an element update. Note, if an exception is thrown during the\n     * update, `firstUpdated` and `updated` will not be called.\n     *\n     * You can override this method to change the timing of updates. If this\n     * method is overridden, `super.performUpdate()` must be called.\n     *\n     * For instance, to schedule updates to occur just before the next frame:\n     *\n     * ```\n     * protected async performUpdate(): Promise<unknown> {\n     *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n     *   super.performUpdate();\n     * }\n     * ```\n     */\n    performUpdate() {\n        // Mixin instance properties once, if they exist.\n        if (this._instanceProperties) {\n            this._applyInstanceProperties();\n        }\n        let shouldUpdate = false;\n        const changedProperties = this._changedProperties;\n        try {\n            shouldUpdate = this.shouldUpdate(changedProperties);\n            if (shouldUpdate) {\n                this.update(changedProperties);\n            }\n        }\n        catch (e) {\n            // Prevent `firstUpdated` and `updated` from running when there's an\n            // update exception.\n            shouldUpdate = false;\n            throw e;\n        }\n        finally {\n            // Ensure element can accept additional updates after an exception.\n            this._markUpdated();\n        }\n        if (shouldUpdate) {\n            if (!(this._updateState & STATE_HAS_UPDATED)) {\n                this._updateState = this._updateState | STATE_HAS_UPDATED;\n                this.firstUpdated(changedProperties);\n            }\n            this.updated(changedProperties);\n        }\n    }\n    _markUpdated() {\n        this._changedProperties = new Map();\n        this._updateState = this._updateState & ~STATE_UPDATE_REQUESTED;\n    }\n    /**\n     * Returns a Promise that resolves when the element has completed updating.\n     * The Promise value is a boolean that is `true` if the element completed the\n     * update without triggering another update. The Promise result is `false` if\n     * a property was set inside `updated()`. If the Promise is rejected, an\n     * exception was thrown during the update. This getter can be implemented to\n     * await additional state. For example, it is sometimes useful to await a\n     * rendered element before fulfilling this Promise. To do this, first await\n     * `super.updateComplete` then any subsequent state.\n     *\n     * @returns {Promise} The Promise returns a boolean that indicates if the\n     * update resolved without triggering another update.\n     */\n    get updateComplete() {\n        return this._updatePromise;\n    }\n    /**\n     * Controls whether or not `update` should be called when the element requests\n     * an update. By default, this method always returns `true`, but this can be\n     * customized to control when to update.\n     *\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    shouldUpdate(_changedProperties) {\n        return true;\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes.\n     * It can be overridden to render and keep updated element DOM.\n     * Setting properties inside this method will *not* trigger\n     * another update.\n     *\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    update(_changedProperties) {\n        if (this._reflectingProperties !== undefined &&\n            this._reflectingProperties.size > 0) {\n            // Use forEach so this works even if for/of loops are compiled to for\n            // loops expecting arrays\n            this._reflectingProperties.forEach((v, k) => this._propertyToAttribute(k, this[k], v));\n            this._reflectingProperties = undefined;\n        }\n    }\n    /**\n     * Invoked whenever the element is updated. Implement to perform\n     * post-updating tasks via DOM APIs, for example, focusing an element.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    updated(_changedProperties) {\n    }\n    /**\n     * Invoked when the element is first updated. Implement to perform one time\n     * work on the element after update.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    firstUpdated(_changedProperties) {\n    }\n}\n/**\n * Marks class as having finished creating properties.\n */\nUpdatingElement.finalized = true;\n//# sourceMappingURL=updating-element.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst legacyCustomElement = (tagName, clazz) => {\n    window.customElements.define(tagName, clazz);\n    // Cast as any because TS doesn't recognize the return type as being a\n    // subtype of the decorated class when clazz is typed as\n    // `Constructor<HTMLElement>` for some reason.\n    // `Constructor<HTMLElement>` is helpful to make sure the decorator is\n    // applied to elements however.\n    // tslint:disable-next-line:no-any\n    return clazz;\n};\nconst standardCustomElement = (tagName, descriptor) => {\n    const { kind, elements } = descriptor;\n    return {\n        kind,\n        elements,\n        // This callback is called once the class is otherwise fully defined\n        finisher(clazz) {\n            window.customElements.define(tagName, clazz);\n        }\n    };\n};\n/**\n * Class decorator factory that defines the decorated class as a custom element.\n *\n * @param tagName the name of the custom element to define\n */\nexport const customElement = (tagName) => (classOrDescriptor) => (typeof classOrDescriptor === 'function') ?\n    legacyCustomElement(tagName, classOrDescriptor) :\n    standardCustomElement(tagName, classOrDescriptor);\nconst standardProperty = (options, element) => {\n    // When decorating an accessor, pass it through and add property metadata.\n    // Note, the `hasOwnProperty` check in `createProperty` ensures we don't\n    // stomp over the user's accessor.\n    if (element.kind === 'method' && element.descriptor &&\n        !('value' in element.descriptor)) {\n        return Object.assign({}, element, { finisher(clazz) {\n                clazz.createProperty(element.key, options);\n            } });\n    }\n    else {\n        // createProperty() takes care of defining the property, but we still\n        // must return some kind of descriptor, so return a descriptor for an\n        // unused prototype field. The finisher calls createProperty().\n        return {\n            kind: 'field',\n            key: Symbol(),\n            placement: 'own',\n            descriptor: {},\n            // When @babel/plugin-proposal-decorators implements initializers,\n            // do this instead of the initializer below. See:\n            // https://github.com/babel/babel/issues/9260 extras: [\n            //   {\n            //     kind: 'initializer',\n            //     placement: 'own',\n            //     initializer: descriptor.initializer,\n            //   }\n            // ],\n            // tslint:disable-next-line:no-any decorator\n            initializer() {\n                if (typeof element.initializer === 'function') {\n                    this[element.key] = element.initializer.call(this);\n                }\n            },\n            finisher(clazz) {\n                clazz.createProperty(element.key, options);\n            }\n        };\n    }\n};\nconst legacyProperty = (options, proto, name) => {\n    proto.constructor\n        .createProperty(name, options);\n};\n/**\n * A property decorator which creates a LitElement property which reflects a\n * corresponding attribute value. A `PropertyDeclaration` may optionally be\n * supplied to configure property features.\n *\n * @ExportDecoratedItems\n */\nexport function property(options) {\n    // tslint:disable-next-line:no-any decorator\n    return (protoOrDescriptor, name) => (name !== undefined) ?\n        legacyProperty(options, protoOrDescriptor, name) :\n        standardProperty(options, protoOrDescriptor);\n}\n/**\n * A property decorator that converts a class property into a getter that\n * executes a querySelector on the element's renderRoot.\n *\n * @ExportDecoratedItems\n */\nexport function query(selector) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                return this.renderRoot.querySelector(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\n/**\n * A property decorator that converts a class property into a getter\n * that executes a querySelectorAll on the element's renderRoot.\n *\n * @ExportDecoratedItems\n */\nexport function queryAll(selector) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                return this.renderRoot.querySelectorAll(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\nconst legacyQuery = (descriptor, proto, name) => {\n    Object.defineProperty(proto, name, descriptor);\n};\nconst standardQuery = (descriptor, element) => ({\n    kind: 'method',\n    placement: 'prototype',\n    key: element.key,\n    descriptor,\n});\nconst standardEventOptions = (options, element) => {\n    return Object.assign({}, element, { finisher(clazz) {\n            Object.assign(clazz.prototype[element.key], options);\n        } });\n};\nconst legacyEventOptions = \n// tslint:disable-next-line:no-any legacy decorator\n(options, proto, name) => {\n    Object.assign(proto[name], options);\n};\n/**\n * Adds event listener options to a method used as an event listener in a\n * lit-html template.\n *\n * @param options An object that specifis event listener options as accepted by\n * `EventTarget#addEventListener` and `EventTarget#removeEventListener`.\n *\n * Current browsers support the `capture`, `passive`, and `once` options. See:\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Parameters\n *\n * @example\n *\n *     class MyElement {\n *\n *       clicked = false;\n *\n *       render() {\n *         return html`<div @click=${this._onClick}`><button></button></div>`;\n *       }\n *\n *       @eventOptions({capture: true})\n *       _onClick(e) {\n *         this.clicked = true;\n *       }\n *     }\n */\nexport const eventOptions = (options) => \n// Return value typed as any to prevent TypeScript from complaining that\n// standard decorator function signature does not match TypeScript decorator\n// signature\n// TODO(kschaaf): unclear why it was only failing on this decorator and not\n// the others\n((protoOrDescriptor, name) => (name !== undefined) ?\n    legacyEventOptions(options, protoOrDescriptor, name) :\n    standardEventOptions(options, protoOrDescriptor));\n//# sourceMappingURL=decorators.js.map","/**\n@license\nCopyright (c) 2019 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nexport const supportsAdoptingStyleSheets = ('adoptedStyleSheets' in Document.prototype) &&\n    ('replace' in CSSStyleSheet.prototype);\nconst constructionToken = Symbol();\nexport class CSSResult {\n    constructor(cssText, safeToken) {\n        if (safeToken !== constructionToken) {\n            throw new Error('CSSResult is not constructable. Use `unsafeCSS` or `css` instead.');\n        }\n        this.cssText = cssText;\n    }\n    // Note, this is a getter so that it's lazy. In practice, this means\n    // stylesheets are not created until the first element instance is made.\n    get styleSheet() {\n        if (this._styleSheet === undefined) {\n            // Note, if `adoptedStyleSheets` is supported then we assume CSSStyleSheet\n            // is constructable.\n            if (supportsAdoptingStyleSheets) {\n                this._styleSheet = new CSSStyleSheet();\n                this._styleSheet.replaceSync(this.cssText);\n            }\n            else {\n                this._styleSheet = null;\n            }\n        }\n        return this._styleSheet;\n    }\n    toString() {\n        return this.cssText;\n    }\n}\n/**\n * Wrap a value for interpolation in a css tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value) => {\n    return new CSSResult(String(value), constructionToken);\n};\nconst textFromCSSResult = (value) => {\n    if (value instanceof CSSResult) {\n        return value.cssText;\n    }\n    else {\n        throw new Error(`Value passed to 'css' function must be a 'css' function result: ${value}. Use 'unsafeCSS' to pass non-literal values, but\n            take care to ensure page security.`);\n    }\n};\n/**\n * Template tag which which can be used with LitElement's `style` property to\n * set element styles. For security reasons, only literal string values may be\n * used. To incorporate non-literal values `unsafeCSS` may be used inside a\n * template string part.\n */\nexport const css = (strings, ...values) => {\n    const cssText = values.reduce((acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1], strings[0]);\n    return new CSSResult(cssText, constructionToken);\n};\n//# sourceMappingURL=css-tag.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { TemplateResult } from 'lit-html';\nimport { render } from 'lit-html/lib/shady-render.js';\nimport { UpdatingElement } from './lib/updating-element.js';\nexport * from './lib/updating-element.js';\nexport * from './lib/decorators.js';\nexport { html, svg, TemplateResult, SVGTemplateResult } from 'lit-html/lit-html.js';\nimport { supportsAdoptingStyleSheets } from './lib/css-tag.js';\nexport * from './lib/css-tag.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litElementVersions'] || (window['litElementVersions'] = []))\n    .push('2.0.1');\n/**\n * Minimal implementation of Array.prototype.flat\n * @param arr the array to flatten\n * @param result the accumlated result\n */\nfunction arrayFlat(styles, result = []) {\n    for (let i = 0, length = styles.length; i < length; i++) {\n        const value = styles[i];\n        if (Array.isArray(value)) {\n            arrayFlat(value, result);\n        }\n        else {\n            result.push(value);\n        }\n    }\n    return result;\n}\n/** Deeply flattens styles array. Uses native flat if available. */\nconst flattenStyles = (styles) => styles.flat ? styles.flat(Infinity) : arrayFlat(styles);\nexport class LitElement extends UpdatingElement {\n    /** @nocollapse */\n    static finalize() {\n        super.finalize();\n        // Prepare styling that is stamped at first render time. Styling\n        // is built from user provided `styles` or is inherited from the superclass.\n        this._styles =\n            this.hasOwnProperty(JSCompiler_renameProperty('styles', this)) ?\n                this._getUniqueStyles() :\n                this._styles || [];\n    }\n    /** @nocollapse */\n    static _getUniqueStyles() {\n        // Take care not to call `this.styles` multiple times since this generates\n        // new CSSResults each time.\n        // TODO(sorvell): Since we do not cache CSSResults by input, any\n        // shared styles will generate new stylesheet objects, which is wasteful.\n        // This should be addressed when a browser ships constructable\n        // stylesheets.\n        const userStyles = this.styles;\n        const styles = [];\n        if (Array.isArray(userStyles)) {\n            const flatStyles = flattenStyles(userStyles);\n            // As a performance optimization to avoid duplicated styling that can\n            // occur especially when composing via subclassing, de-duplicate styles\n            // preserving the last item in the list. The last item is kept to\n            // try to preserve cascade order with the assumption that it's most\n            // important that last added styles override previous styles.\n            const styleSet = flatStyles.reduceRight((set, s) => {\n                set.add(s);\n                // on IE set.add does not return the set.\n                return set;\n            }, new Set());\n            // Array.from does not work on Set in IE\n            styleSet.forEach((v) => styles.unshift(v));\n        }\n        else if (userStyles) {\n            styles.push(userStyles);\n        }\n        return styles;\n    }\n    /**\n     * Performs element initialization. By default this calls `createRenderRoot`\n     * to create the element `renderRoot` node and captures any pre-set values for\n     * registered properties.\n     */\n    initialize() {\n        super.initialize();\n        this.renderRoot =\n            this.createRenderRoot();\n        // Note, if renderRoot is not a shadowRoot, styles would/could apply to the\n        // element's getRootNode(). While this could be done, we're choosing not to\n        // support this now since it would require different logic around de-duping.\n        if (window.ShadowRoot && this.renderRoot instanceof window.ShadowRoot) {\n            this.adoptStyles();\n        }\n    }\n    /**\n     * Returns the node into which the element should render and by default\n     * creates and returns an open shadowRoot. Implement to customize where the\n     * element's DOM is rendered. For example, to render into the element's\n     * childNodes, return `this`.\n     * @returns {Element|DocumentFragment} Returns a node into which to render.\n     */\n    createRenderRoot() {\n        return this.attachShadow({ mode: 'open' });\n    }\n    /**\n     * Applies styling to the element shadowRoot using the `static get styles`\n     * property. Styling will apply using `shadowRoot.adoptedStyleSheets` where\n     * available and will fallback otherwise. When Shadow DOM is polyfilled,\n     * ShadyCSS scopes styles and adds them to the document. When Shadow DOM\n     * is available but `adoptedStyleSheets` is not, styles are appended to the\n     * end of the `shadowRoot` to [mimic spec\n     * behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n     */\n    adoptStyles() {\n        const styles = this.constructor._styles;\n        if (styles.length === 0) {\n            return;\n        }\n        // There are three separate cases here based on Shadow DOM support.\n        // (1) shadowRoot polyfilled: use ShadyCSS\n        // (2) shadowRoot.adoptedStyleSheets available: use it.\n        // (3) shadowRoot.adoptedStyleSheets polyfilled: append styles after\n        // rendering\n        if (window.ShadyCSS !== undefined && !window.ShadyCSS.nativeShadow) {\n            window.ShadyCSS.ScopingShim.prepareAdoptedCssText(styles.map((s) => s.cssText), this.localName);\n        }\n        else if (supportsAdoptingStyleSheets) {\n            this.renderRoot.adoptedStyleSheets =\n                styles.map((s) => s.styleSheet);\n        }\n        else {\n            // This must be done after rendering so the actual style insertion is done\n            // in `update`.\n            this._needsShimAdoptedStyleSheets = true;\n        }\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        // Note, first update/render handles styleElement so we only call this if\n        // connected after first update.\n        if (this.hasUpdated && window.ShadyCSS !== undefined) {\n            window.ShadyCSS.styleElement(this);\n        }\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes\n     * and calls `render` to render DOM via lit-html. Setting properties inside\n     * this method will *not* trigger another update.\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    update(changedProperties) {\n        super.update(changedProperties);\n        const templateResult = this.render();\n        if (templateResult instanceof TemplateResult) {\n            this.constructor\n                .render(templateResult, this.renderRoot, { scopeName: this.localName, eventContext: this });\n        }\n        // When native Shadow DOM is used but adoptedStyles are not supported,\n        // insert styling after rendering to ensure adoptedStyles have highest\n        // priority.\n        if (this._needsShimAdoptedStyleSheets) {\n            this._needsShimAdoptedStyleSheets = false;\n            this.constructor._styles.forEach((s) => {\n                const style = document.createElement('style');\n                style.textContent = s.cssText;\n                this.renderRoot.appendChild(style);\n            });\n        }\n    }\n    /**\n     * Invoked on each update to perform rendering tasks. This method must return\n     * a lit-html TemplateResult. Setting properties inside this method will *not*\n     * trigger the element to update.\n     */\n    render() {\n    }\n}\n/**\n * Ensure this class is marked as `finalized` as an optimization ensuring\n * it will not needlessly try to `finalize`.\n */\nLitElement.finalized = true;\n/**\n * Render method used to render the lit-html TemplateResult to the element's\n * DOM.\n * @param {TemplateResult} Template to render.\n * @param {Element|DocumentFragment} Node into which to render.\n * @param {String} Element name.\n * @nocollapse\n */\nLitElement.render = render;\n//# sourceMappingURL=lit-element.js.map","import { LitElement, html, css } from 'lit-element';\n\n/**\n * `circle-percent`\n * Circle Percent\n *\n * @customElement\n * @polymer\n * @demo demo/index.html\n */\nclass CirclePercent extends LitElement {\n  static get properties() {\n    return {\n      title: { type: String },\n      percent: { type: Number },\n      radio: { type: Number },\n      swidth: { type: Number },\n      scolor: { type: String },\n      _dasharray: { type: String }\n    }\n  }\n\n  static get styles() {\n    return css`\n      svg { transform: rotateX(180deg) rotateY(180deg); }\n      .circle-inf {\n        text-align: center;\n      }\n      @media screen and (max-width: 767px) {\n        .circle-inf {\n          width: 100%;\n        }\n      }\n      .circle-inf__percent {\n        font-weight: 700;\n        font-size: 22px;\n        letter-spacing: 1px;\n        margin-bottom: 12px;\n        font-family: \"Dosis\", sans-serif;\n        position: relative;\n      }\n      .circle-inf__percent circle {\n        transform: rotate(180deg) scaleY(-1);\n        transform-origin: 50%;\n      }\n      .circle-inf__percent-txt {\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n      }\n      .circle-inf__title {\n        font-family: \"Dosis\", sans-serif;\n        font-weight: 700;\n        letter-spacing: 2px;\n        font-size: 18px;\n      }\n    `;\n  }\n\n  constructor() {\n    super();\n    this.title = \"TITLE\";\n    this.percent = 25;\n    this.radio = 100;\n    this.swidth = 4;\n    this.scolor = \"#cb2240\";\n    this._dasharray = \"\" + Math.PI * this.radio * this.percent/100 + \" \" + Math.PI * this.radio;\n  }\n\n  updated(changedProperties) {\n    if (changedProperties.get('radio') !== this.radio || changedProperties.get('percent') !== this.percent) {\n      this._dasharray = \"\" + Math.PI * this.radio * this.percent/100 + \" \" + Math.PI * this.radio;\n    }\n  }\n\n  render() {\n    return html`\n      <div class=\"circle-inf\">\n        <div class=\"circle-inf__percent\">\n          <div class=\"circle-inf__percent-circle\">\n            <svg width=\"${this.radio+this.swidth}\" height=\"${this.radio+this.swidth}\" \n                viewBox=\"0 ${-this.swidth/2} ${this.radio} ${this.radio+this.swidth}\">\n              <circle cx=\"${this.radio/2}\" cy=\"${this.radio/2}\" \n                      r=\"${this.radio/2}\" stroke=\"${this.scolor}\" fill=\"none\"\n                      stroke-width=\"${this.swidth}\"\n                      stroke-dasharray=\"${this._dasharray}\" />\n            </svg>     \n          </div>\n          <div class=\"circle-inf__percent-txt\">\n            ${this.percent}%\n          </div>\n        </div>\n        <span class=\"circle-inf__title\">${this.title}</span>\n      </div>\n    `;\n  }\n}\n\nwindow.customElements.define('circle-percent', CirclePercent);","import { LitElement, html, css } from 'lit-element';\n\n/**\n * `nav-list`\n * Nav List\n *\n * @customElement\n * @polymer\n * @litElement\n * @demo demo/index.html\n */\nclass NavList extends LitElement {\n  static get properties() {\n    return {\n      list: { type: String },\n      listValues: { type: Array },\n      value: { type: String },\n      title: { type: String },\n      fixed: { type: Boolean },\n    }\n  }\n\n  static get styles(){\n    return css`\n      @media screen and (max-width: 767px) {\n        .navlist-labels {\n          width: 100%;\n        }\n      }\n      .navlist-labels__checkbox {\n        display: none;\n      }\n      .navlist-labels__checkbox:checked + .navlist-labels__txt {\n        border-color: #cc3743;\n        padding: 10px 13px;\n      }\n      .navlist-labels__title {\n        font-family: \"Dosis\", sans-serif;\n        font-weight: 700;\n        letter-spacing: 3px;\n        font-size: 16px;\n        margin-bottom: 10px;\n      }\n      .navlist-labels__group {\n        display: flex;\n        margin-bottom: 15px;\n      }\n      @media screen and (max-width: 992px) {\n        .navlist-labels__group {\n          justify-content: center;\n        }\n      }\n      .navlist-labels__group:last-child {\n        margin-bottom: 0;\n      }\n      .navlist-labels__item {\n        margin: 5px;\n        cursor: pointer;\n      }\n      .navlist-labels__item:first-child {\n        margin-left: 0;\n      }\n      .navlist-labels__txt {\n        display: block;\n        border: 2px solid transparent;\n        font-size: 14px;\n        padding: 10px 20px;\n        padding-left: 0;\n        border-radius: 50px;\n        transition: all 0.3s;\n        letter-spacing: 2px;\n      }\n    `;\n  }\n\n  constructor() {\n    super();\n    this.list = \"0,1,2,3,4,5\";\n    this.listValues = this.list.split(\",\");\n    this.value = null;\n    this.title='TITLE';\n    this.fixed = false;\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.listValues = this.list.split(\",\");\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n  }\n\n  updated() {\n    if (this.value) {\n      this.renderRoot.querySelector(\"[id='navlist-item__\"+this.value+\"']\").checked = true;\n    }\n  }\n\n  _setValue(val) {\n    this.value = val;\n    this.dispatchEvent(new CustomEvent('navlist-changed', { detail: val }));\n  }\n\n  _getInput(val) {\n    let inputStr = (!this.fixed)?html`<input type=\"radio\" class=\"navlist-labels__checkbox\" name=\"type1\" id=\"navlist-item__${val}\">`:html`<input type=\"radio\" class=\"navlist-labels__checkbox\" name=\"type1\" id=\"navlist-item__${val}\" disabled>`;\n    return inputStr;\n  }\n\n  _getSpan(val) {\n    let spanStr = (!this.fixed)?html`<span class=\"navlist-labels__txt\" @click=\"${() => this._setValue(val)}\">&nbsp;${val}&nbsp;</span>`:html`<span class=\"navlist-labels__txt\">&nbsp;${val}&nbsp;</span>`\n    return spanStr\n  }\n\n  _getListValues() {\n    return this.listValues.map(val => html`\n    <label class=\"navlist-labels__item\">\n      ${this._getInput(val)}\n      ${this._getSpan(val)}\n    </label>`);\n  }\n\n  render() {\n    return html`\n      <div class=\"navlist-labels\">\n        <div class=\"navlist-labels__title\">${this.title}</div>\n        <div class=\"navlist-labels__group\">\n          ${this._getListValues()}\n        </div>\n      </div>\n    `;\n  }\n}\n\nwindow.customElements.define('nav-list', NavList);\n","import { LitElement, html } from 'lit-element';\nimport '@manufosela/circle-percent';\nimport '@manufosela/nav-list';\n\n/**\n * `element-card`\n * Element Card\n *\n * @customElement\n * @polymer\n * @demo demo/index.html\n */\nexport class ElementCard extends LitElement {\n  static get properties() {\n    return {\n      title: { type: String },\n      description: { type: String },\n      navlist: { type: String },\n      circlepercent: { type: String },\n      cover: { type: String },\n      coverBgColor: { type: String },\n      textColor: { type: String },\n      imgcover:{ type:String },\n    }\n  }\n\n  constructor() {\n    super();\n    this.title = \"Element-card\";\n    this.description = \"Description from element-card\";\n    this.navlist = '{ \"title\": \"NAVLIST\", \"value\": \"3\", \"list\": \"1,2,3,4,5\", \"fixed\": \"true\" }';\n    this.circlepercent = '{ \"percent\": 75, \"title\": \"PERCENT\" }';\n    this.img_cover = html`<!--COVER-->`;\n    this.coverBgColor = \"rgba(0, 0, 0, 0.7)\";\n    this.textColor = \"#FFF\";\n  }\n\n  updated(mapVar) {\n    let imgcover = mapVar.get(\"imgcover\");\n    if (!imgcover) {\n      this.img_cover = (this.imgcover)?html`<img src=\"${this.imgcover}\" alt=\"${this.title}\">`:html`<!--COVER-->`;\n    }\n    let navlist = mapVar.get(\"navlist\");\n    if (!navlist) {\n      this.navlist=JSON.parse(this.navlist);\n      this.circlepercent=JSON.parse(this.circlepercent);\n    }\n  }\n\n  firstUpdated(){\n    /* DELAY to apply css transform */\n    setTimeout(() => {\n      this.renderRoot.querySelector(\".element-title\").classList.add('showTitle');\n      this.renderRoot.querySelector(\".element-desc\").classList.add('showDesc');\n      this.renderRoot.querySelector(\".element-ctr\").classList.add('showDesc');\n      this._addSeparators();\n    }, 100);\n  }\n\n  _addSeparators(){\n    let children = Object.assign({}, this.children);\n    let counter = 1;\n    for(let ch in children) {\n      if (counter%2===0) {\n        let d = document.createElement('span');\n        d.className='hr-vertical';\n        this.insertBefore(d, children[ch]);\n      }\n      counter++;\n    }\n  }\n\n  render() {\n    return html`\n    <style>\n      :host {\n        display: block;\n        font-family: \"Uni Sans\", sans-serif;\n        font-weight: 500;\n        margin: 30px;\n      }\n      .element-card {\n        padding:60px 0 60px 0;\n        height: 100%;\n        display: flex;\n        align-items: center;\n        width: 100%;\n        transition: all 0.5s;\n        overflow: hidden;\n        position: relative;\n        border-radius: 30px;\n        box-shadow: 0 28px 79px 0 rgba(10, 22, 31, 0.35);\n        max-width: 1200px;\n      }\n      @media screen and (max-width: 992px) {\n        .element-card {\n          align-items: flex-start;\n        }\n      }\n      @media screen and (max-width: 767px) {\n        .element-card {\n          border-radius: 20px;\n        }\n      }\n      .element-cover {\n        border-radius: 30px;\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        display: block;\n        object-fit: cover;\n        opacity: 1;\n        background-color:${this.coverBgColor};\n      }\n      .element-cover img {\n        max-width: var(--imgcover-max-width, 100%);\n        opacity: var(--imgcover-opacity, 1);\n      }\n\n      @media screen and (max-width: 767px) {\n        .element-cover {\n          border-radius: 20px;\n        }\n      }\n      .element-content {\n        color: ${this.textColor};\n        padding-top: 1px;\n        position: relative;\n        z-index: 2;\n        width: 100%;\n        padding-left: 250px;\n        padding-right: 80px;\n      }\n      @media screen and (max-width: 1200px) {\n        .element-content {\n          padding-left: 220px;\n        }\n      }\n      @media screen and (max-width: 992px) {\n        .element-content {\n          padding: 20px 60px 100px;\n          text-align: center;\n        }\n      }\n      @media screen and (max-width: 767px) {\n        .element-content {\n          padding: 20px 30px 50px;\n        }\n      }\n      @media screen and (max-width: 576px) {\n        .element-content {\n          padding-left: 15px;\n          padding-right: 15px;\n        }\n      }\n      .element-title {\n        margin: 0;\n        margin-bottom: 10px;\n        font-weight: 900;\n        font-size: 41px;\n        line-height: 1.2em;\n        letter-spacing: 2px;\n        opacity: 0;\n        transform: translateY(-55px);\n      }\n\n      @media screen and (max-width: 1200px) {\n        .element-title {\n          font-size: 34px;\n        }\n      }\n      @media screen and (max-width: 576px) {\n        .element-title {\n          font-size: 24px;\n        }\n      }\n      .element-desc {\n        display: block;\n        font-size: 42px;\n        opacity: 0;\n        transform: translateY(-110px);\n      }\n\n      @media screen and (max-width: 1200px) {\n        .element-desc {\n          font-size: 36px;\n        }\n      }\n      @media screen and (max-width: 576px) {\n        .element-desc {\n          font-size: 30px;\n        }\n      }\n      .element-ctr {\n        display: grid;\n        grid-template-columns: 1fr 1px 1fr;\n        grid-gap: 10px;\n        align-items: center;\n        min-height: 150px;\n        margin-top: 40px;\n        opacity: 0;\n        transform: translateY(-165px);\n      }\n      @media screen and (max-width: 992px) {\n        .element-ctr {\n          justify-content: center;\n        }\n      }\n      ::slotted(.hr-vertical) {\n        width: 1px;\n        background: #9fa3a7;\n        align-self: stretch;\n        margin: 0;\n        flex-shrink: 0;\n        opacity: 0.5;\n      }\n      @media screen and (max-width: 767px) {\n        .element-ctr {\n          grid-template-columns: 1fr;\n          justify-content: center;\n          flex-wrap: wrap;\n          margin-bottom: 40px;\n        }\n        ::slotted(.hr-vertical) {\n          width: 100%;\n          margin: 35px 0;\n          height: 1px;\n        }\n      }\n      .element-inf-list {\n        display: grid;\n        grid-template-columns: repeat(3, 1fr);\n        grid-gap: 30px;\n      }\n      .element-inf {\n\n      }\n\n      .showTitle {\n        opacity: 1;\n        transform: translateY(0px);\n        transition: all 0.5s;\n      }\n      .showDesc {\n        opacity: 1;\n        transform: translateY(0px);\n        transition: all 1s;\n      }\n    </style>\n\n    <div class=\"element-card\">\n      <div class=\"element-cover\">\n        ${this.img_cover}\n      </div>\n      <div class=\"element-content\">\n        <h1 class=\"element-title\">\n          ${this.title}\n        </h1>\n        <span class=\"element-desc\">\n          ${this.description}\n        </span>\n        <div class=\"element-ctr\">\n          <slot></slot>\n        </div>\n      </div>\n    </div>\n    `;\n  }\n}\n\nwindow.customElements.define('element-card', ElementCard);\n"],"names":["render","litRender","CirclePercent","LitElement","properties","title","type","String","percent","Number","radio","swidth","scolor","_dasharray","styles","css","constructor","Math","PI","updated","changedProperties","get","html","window","customElements","define","NavList","list","listValues","Array","value","fixed","Boolean","split","connectedCallback","disconnectedCallback","renderRoot","querySelector","checked","_setValue","val","dispatchEvent","CustomEvent","detail","_getInput","inputStr","_getSpan","spanStr","_getListValues","map","ElementCard","description","navlist","circlepercent","cover","coverBgColor","textColor","imgcover","img_cover","mapVar","JSON","parse","firstUpdated","setTimeout","classList","add","_addSeparators","children","Object","assign","counter","ch","d","document","createElement","className","insertBefore"],"mappings":"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"}